name: database-workloads
on:
  pull_request:
    branches: [main]

jobs:
  workloads:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        database: [fdb, cdb, pg]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java (for CockroachDB and PostgreSQL)
        if: matrix.database != 'fdb'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install Python 2
        run: |
          sudo apt-get update
          sudo apt-get install -y python2

      - name: Download YCSB and JDBC driver
        run: |
          wget https://github.com/brianfrankcooper/YCSB/releases/download/0.17.0/ycsb-0.17.0.tar.gz
          tar xfvz ycsb-0.17.0.tar.gz
          sed -i '1s/python/python2/' ycsb-0.17.0/bin/ycsb
          wget -P ycsb-0.17.0/lib/ https://jdbc.postgresql.org/download/postgresql-42.6.0.jar

      - name: Configure workload F
        run: |
          mkdir -p workloads
          cat > ./workloads/workloadf <<EOL
          workload=site.ycsb.workloads.CoreWorkload
          readallfields=true
          readproportion=0.5
          updateproportion=0
          scanproportion=0
          insertproportion=0
          readmodifywriteproportion=0.5
          requestdistribution=zipfian
          recordcount=100000
          operationcount=100000
          fieldcount=3
          fieldlength=100
          EOL

      - name: Setup FoundationDB
        if: matrix.database == 'fdb'
        run: |
          curl -LO https://github.com/apple/foundationdb/releases/download/7.1.53/foundationdb-server_7.1.53-1_amd64.deb
          curl -LO https://github.com/apple/foundationdb/releases/download/7.1.53/foundationdb-clients_7.1.53-1_amd64.deb
          sudo dpkg -i foundationdb-clients_7.1.53-1_amd64.deb
          sudo dpkg -i foundationdb-server_7.1.53-1_amd64.deb

          CORES=$(nproc)
          echo "Configuring FoundationDB to use 1 storage process."
          sudo sed -i -E "s/^[# ]*processes[ ]*=[ ]*.*/processes = 1/" /etc/foundationdb/foundationdb.conf
          sudo systemctl restart foundationdb
          sleep 10

          sudo cp /etc/foundationdb/fdb.cluster .

      - name: Build YCSB FDB binding
        if: matrix.database == 'fdb'
        run: |
          git clone --branch 0.17.0 --depth 1 https://github.com/brianfrankcooper/YCSB.git YCSB
          cd YCSB/foundationdb
          mvn clean package -DskipTests

      - name: Setup CockroachDB
        if: matrix.database == 'cdb'
        run: |
          curl https://binaries.cockroachdb.com/cockroach-v22.1.21.linux-amd64.tgz | tar -xz --strip-components=1
          sudo cp cockroach /usr/local/bin/

          (cockroach start-single-node --insecure --http-addr=:8080 --listen-addr=:26257 && trap "cockroach quit --insecure" EXIT) &
          sleep 5

          cockroach sql --insecure --host=localhost:26257 -e "CREATE DATABASE IF NOT EXISTS ycsb;"
          cockroach sql --insecure --host=localhost:26257 -d ycsb -e \
            "CREATE TABLE IF NOT EXISTS usertable (
              ycsb_key VARCHAR(255) PRIMARY KEY,
              field0 TEXT,
              field1 TEXT,
              field2 TEXT
            );"

      - name: Setup PostgreSQL
        if: matrix.database == 'pg'
        uses: tj-actions/install-postgresql@v3
        with:
          postgresql-version: 18
      - name: Configure PostgreSQL for YCSB
        if: matrix.database == 'pg'
        run: |
          sudo -u postgres createuser -d ycsb
          sudo -u postgres createdb ycsb
          sudo -u postgres psql -c "ALTER USER ycsb PASSWORD 'password';"
          sudo -u postgres psql -d ycsb -c \
            "CREATE TABLE IF NOT EXISTS usertable (
              ycsb_key VARCHAR(255) PRIMARY KEY,
              field0 TEXT,
              field1 TEXT,
              field2 TEXT
            );"

      - name: Load data and run workload
        run: |
          if [ "${{ matrix.database }}" == "fdb" ]; then
            cd YCSB
            ./bin/ycsb load foundationdb -s -P ../workloads/workloadf \
              -p foundationdb.clusterfile=../fdb.cluster \
              -p foundationdb.concurrency=$(nproc) \
              -threads $(nproc)

            ./bin/ycsb run foundationdb -s -P ../workloads/workloadf \
              -p foundationdb.clusterfile=../fdb.cluster \
              -p foundationdb.keyprefix=test \
              -p foundationdb.concurrency=$(nproc) \
              -p foundationdb.max_retries=100 \
              -p foundationdb.transaction_timeout=60000 \
              -threads $(nproc) > ../${{ matrix.database }}_results_workloadf.txt
          elif [ "${{ matrix.database }}" == "cdb" ]; then
            cd ycsb-0.17.0
            ./bin/ycsb load jdbc -s -P ../workloads/workloadf \
              -p db.driver=org.postgresql.Driver \
              -p db.url="jdbc:postgresql://localhost:26257/ycsb?sslmode=disable" \
              -p db.user=root \
              -p db.passwd="" \
              -p jdbc.fetchsize=10 \
              -p jdbc.autocommit=true \
              -p db.batchsize=1000

            ./bin/ycsb run jdbc -s -P ../workloads/workloadf \
              -p db.driver=org.postgresql.Driver \
              -p db.url="jdbc:postgresql://localhost:26257/ycsb?sslmode=disable" \
              -p db.user=root \
              -p db.passwd="" \
              -p jdbc.fetchsize=10 \
              -p jdbc.autocommit=true \
              -p db.batchsize=1000 > ../${{ matrix.database }}_results_workloadf.txt
          elif [ "${{ matrix.database }}" == "pg" ]; then
            cd ycsb-0.17.0
            ./bin/ycsb load jdbc -s -P ../workloads/workloadf \
              -p db.driver=org.postgresql.Driver \
              -p db.url=jdbc:postgresql://localhost:5432/ycsb \
              -p db.user=ycsb \
              -p db.passwd=password \
              -p jdbc.fetchsize=10 \
              -p jdbc.autocommit=true \
              -p db.batchsize=1000

            ./bin/ycsb run jdbc -s -P ../workloads/workloadf \
              -p db.driver=org.postgresql.Driver \
              -p db.url=jdbc:postgresql://localhost:5432/ycsb \
              -p db.user=ycsb \
              -p db.passwd=password \
              -p jdbc.fetchsize=10 \
              -p jdbc.autocommit=true \
              -p db.batchsize=1000 > ../${{ matrix.database }}_results_workloadf.txt
          fi

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.database }}-results-workloadf
          path: ${{ matrix.database }}_results_workloadf.txt
