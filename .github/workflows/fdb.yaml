name: foundationdb-workloadf
on:
  push:
    tags:
      - '*'
jobs:
  foundationdb-workloadf:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python 2
        run: |
          sudo apt-get update
          sudo apt-get install -y python2

      - name: Install FoundationDB server and client
        run: |
          sudo apt-get update
          curl -LO https://github.com/apple/foundationdb/releases/download/7.3.63/foundationdb-server_7.3.63-1_amd64.deb
          curl -LO https://github.com/apple/foundationdb/releases/download/7.3.63/foundationdb-clients_7.3.63-1_amd64.deb
          sudo dpkg -i foundationdb-clients_7.3.63-1_amd64.deb
          sudo dpkg -i foundationdb-server_7.3.63-1_amd64.deb

      - name: Configure FoundationDB for performance
        run: |
          CORES=$(nproc)
          echo "Number of cores detected: $CORES"
          echo "Configuring FoundationDB for performance with $CORES processes, ssd-2 storage, and 8GB memory."
          
          # Update 'processes' setting
          sudo sed -i -E "s/^[# ]*processes[ ]*=[ ]*.*/processes = $CORES/" /etc/foundationdb/foundationdb.conf
          
          # Add or update 'storage_engine' setting
          grep -q "^storage_engine =" /etc/foundationdb/foundationdb.conf || echo "storage_engine = memory" | sudo tee -a /etc/foundationdb/foundationdb.conf # Add a default if not present
          sudo sed -i -E "s/^[# ]*storage_engine[ ]*=[ ]*.*/storage_engine = ssd-2/" /etc/foundationdb/foundationdb.conf

          # Add or update 'storage_memory' setting
          grep -q "^storage_memory =" /etc/foundationdb/foundationdb.conf || echo "storage_memory = 1GB" | sudo tee -a /etc/foundationdb/foundationdb.conf # Add a default if not present
          sudo sed -i -E "s/^[# ]*storage_memory[ ]*=[ ]*.*/storage_memory = 8GB/" /etc/foundationdb/foundationdb.conf
          
          echo "Verifying FoundationDB configuration (grep for 'processes', 'storage_engine', 'storage_memory' in /etc/foundationdb/foundationdb.conf):"
          sudo grep "processes" /etc/foundationdb/foundationdb.conf || echo "'processes' line not found or not updated in /etc/foundationdb/foundationdb.conf"
          sudo grep "storage_engine" /etc/foundationdb/foundationdb.conf || echo "'storage_engine' line not found or not updated in /etc/foundationdb/foundationdb.conf"
          sudo grep "storage_memory" /etc/foundationdb/foundationdb.conf || echo "'storage_memory' line not found or not updated in /etc/foundationdb/foundationdb.conf"

          echo "Restarting FoundationDB service..."
          sudo systemctl restart foundationdb
          
          echo "Waiting 10 seconds for FoundationDB to stabilize after restart..."
          sleep 10

      - name: Copy cluster file to workspace
        run: |
          sudo cp /etc/foundationdb/fdb.cluster .

      - name: Build YCSB FDB binding
        run: |
          git clone --branch 0.17.0 --depth 1 https://github.com/brianfrankcooper/YCSB.git
          cd YCSB/foundationdb
          mvn clean package -DskipTests

      - name: Run Workload F with optimized settings
        run: |
          cd YCSB
          sed -i '1s/python/python3/' ./bin/ycsb
          
          ./bin/ycsb load foundationdb -s -P workloads/workloadf \
            -p foundationdb.clusterfile=../fdb.cluster \
            -p foundationdb.concurrency=$(nproc) \
            -threads $(nproc)
          
          ./bin/ycsb run foundationdb -s -P workloads/workloadf \
            -p foundationdb.clusterfile=../fdb.cluster \
            -p foundationdb.keyprefix=test \
            -p foundationdb.concurrency=$(nproc) \
            -p foundationdb.max_retries=100 \
            -p foundationdb.transaction_timeout=60000 \
            -threads $(nproc) > ../foundationdb_results_workloadf.txt

      - name: Upload FoundationDB results
        uses: actions/upload-artifact@v4
        with:
          name: foundationdb-results-workloadf
          path: foundationdb_results_workloadf.txt
